<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.lpl.mybatis.mapper.TeacherMapper">
    <!--
        思路:
            1.从学生表和老师表中查出学生id,学生姓名,老师姓名
            2.对查询出来的操作做结果集映射
                集合的话 使用collection
                 javaType和ofType都是用来指定对象类型的
                    javaType使用来指定pojo中属性的类型
                    ofType指定的是映射到list集合属性中的pojo的类型
    -->

    <!-- 按结果嵌套处理 -->
    <select id="getTeacher" resultMap="TeacherStudent">
        select s.id sid, s.name sname, t.name tname, t.id tid
        from student s,
             teacher t
        where s.tid = t.id
          and t.id = #{id}
    </select>

    <resultMap id="TeacherStudent" type="com.lpl.mybatis.domain.Teacher">
        <result property="name" column="tname"/>
        <collection property="students" ofType="com.lpl.mybatis.domain.Student">
            <result property="id" column="sid"/>
            <result property="name" column="sname"/>
            <result property="tid" column="tid"/>
        </collection>
    </resultMap>

    <!-- 按照查询嵌套查询 -->
    <select id="getTeacher2" resultMap="TeacherStudent2">
        select *
        from teacher
        where id = #{id}
    </select>

    <resultMap id="TeacherStudent2" type="Teacher">
        <!--column是一对多的外键 , 写的是一的主键的列名-->
        <collection property="students" javaType="ArrayList" ofType="Student" column="id"
                    select="getStudentByTeacherId"/>
    </resultMap>
    <select id="getStudentByTeacherId" resultType="Student">
        select id,name,tid
        from student
        where tid = #{id}
    </select>
</mapper>